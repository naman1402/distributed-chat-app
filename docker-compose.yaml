version: "3.6"
services:
  cassandra:
    container_name: testCass
    image: cassandra:4.0
    ports:
      - ${CASSANDRA_PORT}:9042
    networks:
      - go_net
    volumes:
      - ~/apps/cassandra:/var/lib/cassandra
    environment:
      - CASSANDRA_CLUSTER_NAME=mycluster
  redis:
    container_name: redis_chat_app
    image: "redis:7.0.2"
    ports:
      - ${REDIS_PORT}:6379
    networks:
      - go_net
  api1:
    container_name: go_chat_1
    build: .
    expose:
      - "${API1_PORT}"
    ports:
      - "${API1_PORT}:${API1_PORT}"
    restart: always
    environment:
      SERVERID: "SERVER1"
      PORT: "${API1_PORT}"
    depends_on:
      - redis
      - cassandra
    networks:
      - go_net
  api2:
    container_name: go_chat_2
    build: .
    expose:
      - "${API2_PORT}"
    ports:
      - "${API2_PORT}:${API2_PORT}"
    restart: always
    environment:
      SERVERID: "SERVER2"
      PORT: "${API2_PORT}"
    depends_on:
      - redis
      - cassandra
    networks:
      - go_net
  api3:
    container_name: go_chat_3
    build: .
    expose:
      - "${API3_PORT}"
    ports:
      - "${API3_PORT}:${API3_PORT}"
    restart: always
    environment:
      SERVERID: "SERVER3"
      PORT: "${API3_PORT}"
    depends_on:
      - redis
      - cassandra
    networks:
      - go_net
  nginx:
    container_name: nginxproxy
    restart: always
    build: 
      context: ./nginx
    ports:
      - ${NGINX_PORT}:80
    depends_on:
      - api1
      - api2
      - api3
    networks:
      - go_net
networks:
  go_net: